{
 "kind": "discovery#restDescription",
 "etag": "\"YVocwOe7q_W9_C504srbqpp7YGE/9ciMdhhmx6BPULFGaJmWGPuMkK4\"",
 "discoveryVersion": "v1",
 "id": "fmthings:v1",
 "name": "fmthings",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://rocket-findmythings.appspot.com/_ah/api/fmthings/v1/",
 "basePath": "/_ah/api/fmthings/v1/",
 "rootUrl": "https://rocket-findmythings.appspot.com/_ah/api/",
 "servicePath": "fmthings/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "AppMember": {
   "id": "AppMember",
   "type": "object",
   "properties": {
    "address": {
     "type": "string"
    },
    "admin": {
     "type": "boolean"
    },
    "editable": {
     "type": "boolean"
    },
    "email": {
     "type": "string"
    },
    "locked": {
     "type": "boolean"
    },
    "name": {
     "type": "string"
    },
    "phone": {
     "$ref": "PhoneNumber"
    },
    "registered": {
     "type": "boolean"
    },
    "roles": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "stringPermissions": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "Category": {
   "id": "Category",
   "type": "string",
   "enum": [
    "HEIR",
    "KEEPSAKE",
    "MISC"
   ],
   "enumDescriptions": [
    "",
    "",
    ""
   ]
  },
  "CollectionResponse_AppMember": {
   "id": "CollectionResponse_AppMember",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "AppMember"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "CollectionResponse_DBItem": {
   "id": "CollectionResponse_DBItem",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "DBItem"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "DBItem": {
   "id": "DBItem",
   "type": "object",
   "properties": {
    "category": {
     "$ref": "Category"
    },
    "date": {
     "type": "string",
     "format": "date-time"
    },
    "description": {
     "type": "string"
    },
    "location": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "reward": {
     "type": "integer",
     "format": "int32"
    },
    "searchTokens": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "searchableContent": {
     "type": "string"
    },
    "submittedDate": {
     "type": "string",
     "format": "date-time"
    },
    "submittingUser": {
     "type": "string"
    },
    "type": {
     "$ref": "Type"
    }
   }
  },
  "MessageBean": {
   "id": "MessageBean",
   "type": "object",
   "properties": {
    "email": {
     "type": "string"
    },
    "failureReason": {
     "type": "string"
    },
    "message": {
     "type": "string"
    },
    "status": {
     "type": "integer",
     "format": "int32"
    },
    "token": {
     "type": "string"
    }
   }
  },
  "PhoneNumber": {
   "id": "PhoneNumber",
   "type": "object",
   "properties": {
    "number": {
     "type": "string"
    }
   }
  },
  "Type": {
   "id": "Type",
   "type": "string",
   "enum": [
    "DONATION",
    "FOUND",
    "LOST",
    "REQUEST"
   ],
   "enumDescriptions": [
    "",
    "",
    "",
    ""
   ]
  }
 },
 "resources": {
  "account": {
   "methods": {
    "createAdmin": {
     "id": "fmthings.account.createAdmin",
     "path": "register/admin",
     "httpMethod": "POST",
     "parameters": {
      "address": {
       "type": "string",
       "location": "query"
      },
      "email": {
       "type": "string",
       "required": true,
       "location": "query"
      },
      "name": {
       "type": "string",
       "location": "query"
      },
      "password": {
       "type": "string",
       "required": true,
       "location": "query"
      },
      "password_alt": {
       "type": "string",
       "required": true,
       "location": "query"
      },
      "phone": {
       "type": "string",
       "location": "query"
      }
     },
     "parameterOrder": [
      "email",
      "password",
      "password_alt"
     ],
     "response": {
      "$ref": "MessageBean"
     }
    },
    "forgot": {
     "id": "fmthings.account.forgot",
     "path": "forgot",
     "httpMethod": "POST",
     "parameters": {
      "email": {
       "type": "string",
       "required": true,
       "location": "query"
      }
     },
     "parameterOrder": [
      "email"
     ],
     "response": {
      "$ref": "MessageBean"
     }
    },
    "get": {
     "id": "fmthings.account.get",
     "path": "account",
     "httpMethod": "GET",
     "response": {
      "$ref": "AppMember"
     }
    },
    "login": {
     "id": "fmthings.account.login",
     "path": "account/login",
     "httpMethod": "GET",
     "parameters": {
      "email": {
       "type": "string",
       "required": true,
       "location": "query"
      },
      "password": {
       "type": "string",
       "required": true,
       "location": "query"
      }
     },
     "parameterOrder": [
      "email",
      "password"
     ],
     "response": {
      "$ref": "MessageBean"
     }
    },
    "logout": {
     "id": "fmthings.account.logout",
     "path": "account/logout",
     "httpMethod": "DELETE",
     "response": {
      "$ref": "MessageBean"
     }
    },
    "patch": {
     "id": "fmthings.account.patch",
     "path": "account/update",
     "httpMethod": "PATCH",
     "request": {
      "$ref": "AppMember"
     },
     "response": {
      "$ref": "AppMember"
     }
    },
    "register": {
     "id": "fmthings.account.register",
     "path": "register",
     "httpMethod": "POST",
     "parameters": {
      "address": {
       "type": "string",
       "location": "query"
      },
      "email": {
       "type": "string",
       "required": true,
       "location": "query"
      },
      "name": {
       "type": "string",
       "location": "query"
      },
      "password": {
       "type": "string",
       "required": true,
       "location": "query"
      },
      "password_alt": {
       "type": "string",
       "required": true,
       "location": "query"
      },
      "phone": {
       "type": "string",
       "location": "query"
      }
     },
     "parameterOrder": [
      "email",
      "password",
      "password_alt"
     ],
     "response": {
      "$ref": "MessageBean"
     }
    },
    "update": {
     "id": "fmthings.account.update",
     "path": "account/update",
     "httpMethod": "PUT",
     "request": {
      "$ref": "AppMember"
     },
     "response": {
      "$ref": "AppMember"
     }
    }
   }
  },
  "items": {
   "methods": {
    "delete": {
     "id": "fmthings.items.delete",
     "path": "items/delete",
     "httpMethod": "DELETE",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "query"
      }
     },
     "parameterOrder": [
      "id"
     ],
     "response": {
      "$ref": "DBItem"
     }
    },
    "get": {
     "id": "fmthings.items.get",
     "path": "items/get",
     "httpMethod": "GET",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "query"
      }
     },
     "parameterOrder": [
      "id"
     ],
     "response": {
      "$ref": "DBItem"
     }
    },
    "getByUser": {
     "id": "fmthings.items.getByUser",
     "path": "items/forMember",
     "httpMethod": "GET",
     "parameters": {
      "cursor": {
       "type": "string",
       "location": "query"
      },
      "email": {
       "type": "string",
       "required": true,
       "location": "query"
      },
      "limit": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      },
      "type": {
       "type": "string",
       "location": "query"
      }
     },
     "parameterOrder": [
      "email"
     ],
     "response": {
      "$ref": "CollectionResponse_DBItem"
     }
    },
    "getMine": {
     "id": "fmthings.items.getMine",
     "path": "items/mine",
     "httpMethod": "GET",
     "parameters": {
      "cursor": {
       "type": "string",
       "location": "query"
      },
      "limit": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      },
      "type": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "CollectionResponse_DBItem"
     }
    },
    "insert": {
     "id": "fmthings.items.insert",
     "path": "items/insert",
     "httpMethod": "POST",
     "request": {
      "$ref": "DBItem"
     },
     "response": {
      "$ref": "DBItem"
     }
    },
    "list": {
     "id": "fmthings.items.list",
     "path": "items",
     "httpMethod": "GET",
     "parameters": {
      "cursor": {
       "type": "string",
       "location": "query"
      },
      "limit": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      },
      "type": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "CollectionResponse_DBItem"
     }
    },
    "patch": {
     "id": "fmthings.items.patch",
     "path": "items/update",
     "httpMethod": "PATCH",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "query"
      }
     },
     "parameterOrder": [
      "id"
     ],
     "request": {
      "$ref": "DBItem"
     },
     "response": {
      "$ref": "DBItem"
     }
    },
    "search": {
     "id": "fmthings.items.search",
     "path": "search",
     "httpMethod": "POST",
     "parameters": {
      "cursor": {
       "type": "string",
       "location": "query"
      },
      "limit": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      },
      "query": {
       "type": "string",
       "required": true,
       "location": "query"
      },
      "type": {
       "type": "string",
       "location": "query"
      }
     },
     "parameterOrder": [
      "query"
     ],
     "response": {
      "$ref": "CollectionResponse_DBItem"
     }
    },
    "update": {
     "id": "fmthings.items.update",
     "path": "items/update",
     "httpMethod": "PUT",
     "request": {
      "$ref": "DBItem"
     },
     "response": {
      "$ref": "DBItem"
     }
    }
   }
  },
  "members": {
   "methods": {
    "get": {
     "id": "fmthings.members.get",
     "path": "members/get",
     "httpMethod": "GET",
     "parameters": {
      "email": {
       "type": "string",
       "required": true,
       "location": "query"
      }
     },
     "parameterOrder": [
      "email"
     ],
     "response": {
      "$ref": "AppMember"
     }
    },
    "list": {
     "id": "fmthings.members.list",
     "path": "members",
     "httpMethod": "GET",
     "parameters": {
      "cursor": {
       "type": "string",
       "location": "query"
      },
      "limit": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      }
     },
     "response": {
      "$ref": "CollectionResponse_AppMember"
     }
    },
    "patch": {
     "id": "fmthings.members.patch",
     "path": "members/update",
     "httpMethod": "PATCH",
     "parameters": {
      "email": {
       "type": "string",
       "required": true,
       "location": "query"
      }
     },
     "parameterOrder": [
      "email"
     ],
     "request": {
      "$ref": "AppMember"
     },
     "response": {
      "$ref": "AppMember"
     }
    },
    "search": {
     "id": "fmthings.members.search",
     "path": "members/search",
     "httpMethod": "POST",
     "parameters": {
      "cursor": {
       "type": "string",
       "location": "query"
      },
      "email": {
       "type": "string",
       "required": true,
       "location": "query"
      },
      "limit": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "email"
     ],
     "response": {
      "$ref": "CollectionResponse_AppMember"
     }
    },
    "update": {
     "id": "fmthings.members.update",
     "path": "members/update",
     "httpMethod": "PUT",
     "request": {
      "$ref": "AppMember"
     },
     "response": {
      "$ref": "AppMember"
     }
    }
   }
  },
  "test": {
   "methods": {
    "authenticated": {
     "id": "fmthings.test.authenticated",
     "path": "test/auth",
     "httpMethod": "GET",
     "response": {
      "$ref": "MessageBean"
     }
    },
    "unauthenticated": {
     "id": "fmthings.test.unauthenticated",
     "path": "test",
     "httpMethod": "GET",
     "response": {
      "$ref": "MessageBean"
     }
    }
   }
  }
 }
}
