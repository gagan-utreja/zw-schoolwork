/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-04-09 19:13:20 UTC)
 * on 2013-04-10 at 08:17:38 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.fmthings;

/**
 * Service definition for Fmthings (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link FmthingsRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Fmthings extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(com.google.api.client.googleapis.GoogleUtils.VERSION.equals("1.14.1-beta"),
        "You are currently running with version %s of google-api-client. " +
        "You need version 1.14.1-beta of google-api-client to run version " +
        "1.14.1-beta of the  library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://rocket-findmythings.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "fmthings/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Fmthings(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Fmthings(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Account collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Fmthings fmthings = new Fmthings(...);}
   *   {@code Fmthings.Account.List request = fmthings.account().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Account account() {
    return new Account();
  }

  /**
   * The "account" collection of methods.
   */
  public class Account {

    /**
     * Create a request for the method "account.createAdmin".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link CreateAdmin#execute()} method to invoke the remote operation.
     *
     * @param email
     * @param password
     * @param passwordAlt
     * @return the request
     */
    public CreateAdmin createAdmin(java.lang.String email, java.lang.String password, java.lang.String passwordAlt) throws java.io.IOException {
      CreateAdmin result = new CreateAdmin(email, password, passwordAlt);
      initialize(result);
      return result;
    }

    public class CreateAdmin extends FmthingsRequest<com.google.api.services.fmthings.model.MessageBean> {

      private static final String REST_PATH = "register/admin";

      /**
       * Create a request for the method "account.createAdmin".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link CreateAdmin#execute()} method to invoke the remote
       * operation. <p> {@link
       * CreateAdmin#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @param password
       * @param passwordAlt
       * @since 1.13
       */
      protected CreateAdmin(java.lang.String email, java.lang.String password, java.lang.String passwordAlt) {
        super(Fmthings.this, "POST", REST_PATH, null, com.google.api.services.fmthings.model.MessageBean.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
        this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
        this.passwordAlt = com.google.api.client.util.Preconditions.checkNotNull(passwordAlt, "Required parameter passwordAlt must be specified.");
      }

      @Override
      public CreateAdmin setAlt(java.lang.String alt) {
        return (CreateAdmin) super.setAlt(alt);
      }

      @Override
      public CreateAdmin setFields(java.lang.String fields) {
        return (CreateAdmin) super.setFields(fields);
      }

      @Override
      public CreateAdmin setKey(java.lang.String key) {
        return (CreateAdmin) super.setKey(key);
      }

      @Override
      public CreateAdmin setOauthToken(java.lang.String oauthToken) {
        return (CreateAdmin) super.setOauthToken(oauthToken);
      }

      @Override
      public CreateAdmin setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CreateAdmin) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CreateAdmin setQuotaUser(java.lang.String quotaUser) {
        return (CreateAdmin) super.setQuotaUser(quotaUser);
      }

      @Override
      public CreateAdmin setUserIp(java.lang.String userIp) {
        return (CreateAdmin) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public CreateAdmin setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String password;

      /**

       */
      public java.lang.String getPassword() {
        return password;
      }

      public CreateAdmin setPassword(java.lang.String password) {
        this.password = password;
        return this;
      }

      @com.google.api.client.util.Key("password_alt")
      private java.lang.String passwordAlt;

      /**

       */
      public java.lang.String getPasswordAlt() {
        return passwordAlt;
      }

      public CreateAdmin setPasswordAlt(java.lang.String passwordAlt) {
        this.passwordAlt = passwordAlt;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String name;

      /**

       */
      public java.lang.String getName() {
        return name;
      }

      public CreateAdmin setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String phone;

      /**

       */
      public java.lang.String getPhone() {
        return phone;
      }

      public CreateAdmin setPhone(java.lang.String phone) {
        this.phone = phone;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String address;

      /**

       */
      public java.lang.String getAddress() {
        return address;
      }

      public CreateAdmin setAddress(java.lang.String address) {
        this.address = address;
        return this;
      }

      @Override
      public CreateAdmin set(String parameterName, Object value) {
        return (CreateAdmin) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "account.forgot".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Forgot#execute()} method to invoke the remote operation.
     *
     * @param email
     * @return the request
     */
    public Forgot forgot(java.lang.String email) throws java.io.IOException {
      Forgot result = new Forgot(email);
      initialize(result);
      return result;
    }

    public class Forgot extends FmthingsRequest<com.google.api.services.fmthings.model.MessageBean> {

      private static final String REST_PATH = "forgot";

      /**
       * Create a request for the method "account.forgot".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Forgot#execute()} method to invoke the remote operation.
       * <p> {@link
       * Forgot#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @since 1.13
       */
      protected Forgot(java.lang.String email) {
        super(Fmthings.this, "POST", REST_PATH, null, com.google.api.services.fmthings.model.MessageBean.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      }

      @Override
      public Forgot setAlt(java.lang.String alt) {
        return (Forgot) super.setAlt(alt);
      }

      @Override
      public Forgot setFields(java.lang.String fields) {
        return (Forgot) super.setFields(fields);
      }

      @Override
      public Forgot setKey(java.lang.String key) {
        return (Forgot) super.setKey(key);
      }

      @Override
      public Forgot setOauthToken(java.lang.String oauthToken) {
        return (Forgot) super.setOauthToken(oauthToken);
      }

      @Override
      public Forgot setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Forgot) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Forgot setQuotaUser(java.lang.String quotaUser) {
        return (Forgot) super.setQuotaUser(quotaUser);
      }

      @Override
      public Forgot setUserIp(java.lang.String userIp) {
        return (Forgot) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public Forgot setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @Override
      public Forgot set(String parameterName, Object value) {
        return (Forgot) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "account.get".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Get get() throws java.io.IOException {
      Get result = new Get();
      initialize(result);
      return result;
    }

    public class Get extends FmthingsRequest<com.google.api.services.fmthings.model.AppMember> {

      private static final String REST_PATH = "account";

      /**
       * Create a request for the method "account.get".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Get() {
        super(Fmthings.this, "GET", REST_PATH, null, com.google.api.services.fmthings.model.AppMember.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "account.login".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Login#execute()} method to invoke the remote operation.
     *
     * @param email
     * @param password
     * @return the request
     */
    public Login login(java.lang.String email, java.lang.String password) throws java.io.IOException {
      Login result = new Login(email, password);
      initialize(result);
      return result;
    }

    public class Login extends FmthingsRequest<com.google.api.services.fmthings.model.MessageBean> {

      private static final String REST_PATH = "account/login";

      /**
       * Create a request for the method "account.login".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Login#execute()} method to invoke the remote operation.
       * <p> {@link
       * Login#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @param password
       * @since 1.13
       */
      protected Login(java.lang.String email, java.lang.String password) {
        super(Fmthings.this, "GET", REST_PATH, null, com.google.api.services.fmthings.model.MessageBean.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
        this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Login setAlt(java.lang.String alt) {
        return (Login) super.setAlt(alt);
      }

      @Override
      public Login setFields(java.lang.String fields) {
        return (Login) super.setFields(fields);
      }

      @Override
      public Login setKey(java.lang.String key) {
        return (Login) super.setKey(key);
      }

      @Override
      public Login setOauthToken(java.lang.String oauthToken) {
        return (Login) super.setOauthToken(oauthToken);
      }

      @Override
      public Login setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Login) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Login setQuotaUser(java.lang.String quotaUser) {
        return (Login) super.setQuotaUser(quotaUser);
      }

      @Override
      public Login setUserIp(java.lang.String userIp) {
        return (Login) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public Login setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String password;

      /**

       */
      public java.lang.String getPassword() {
        return password;
      }

      public Login setPassword(java.lang.String password) {
        this.password = password;
        return this;
      }

      @Override
      public Login set(String parameterName, Object value) {
        return (Login) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "account.logout".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Logout#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Logout logout() throws java.io.IOException {
      Logout result = new Logout();
      initialize(result);
      return result;
    }

    public class Logout extends FmthingsRequest<com.google.api.services.fmthings.model.MessageBean> {

      private static final String REST_PATH = "account/logout";

      /**
       * Create a request for the method "account.logout".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Logout#execute()} method to invoke the remote operation.
       * <p> {@link
       * Logout#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Logout() {
        super(Fmthings.this, "DELETE", REST_PATH, null, com.google.api.services.fmthings.model.MessageBean.class);
      }

      @Override
      public Logout setAlt(java.lang.String alt) {
        return (Logout) super.setAlt(alt);
      }

      @Override
      public Logout setFields(java.lang.String fields) {
        return (Logout) super.setFields(fields);
      }

      @Override
      public Logout setKey(java.lang.String key) {
        return (Logout) super.setKey(key);
      }

      @Override
      public Logout setOauthToken(java.lang.String oauthToken) {
        return (Logout) super.setOauthToken(oauthToken);
      }

      @Override
      public Logout setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Logout) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Logout setQuotaUser(java.lang.String quotaUser) {
        return (Logout) super.setQuotaUser(quotaUser);
      }

      @Override
      public Logout setUserIp(java.lang.String userIp) {
        return (Logout) super.setUserIp(userIp);
      }

      @Override
      public Logout set(String parameterName, Object value) {
        return (Logout) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "account.patch".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.fmthings.model.AppMember}
     * @return the request
     */
    public Patch patch(com.google.api.services.fmthings.model.AppMember content) throws java.io.IOException {
      Patch result = new Patch(content);
      initialize(result);
      return result;
    }

    public class Patch extends FmthingsRequest<com.google.api.services.fmthings.model.AppMember> {

      private static final String REST_PATH = "account/update";

      /**
       * Create a request for the method "account.patch".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.fmthings.model.AppMember}
       * @since 1.13
       */
      protected Patch(com.google.api.services.fmthings.model.AppMember content) {
        super(Fmthings.this, "PATCH", REST_PATH, content, com.google.api.services.fmthings.model.AppMember.class);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "account.register".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Register#execute()} method to invoke the remote operation.
     *
     * @param email
     * @param password
     * @param passwordAlt
     * @return the request
     */
    public Register register(java.lang.String email, java.lang.String password, java.lang.String passwordAlt) throws java.io.IOException {
      Register result = new Register(email, password, passwordAlt);
      initialize(result);
      return result;
    }

    public class Register extends FmthingsRequest<com.google.api.services.fmthings.model.MessageBean> {

      private static final String REST_PATH = "register";

      /**
       * Create a request for the method "account.register".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Register#execute()} method to invoke the remote operation.
       * <p> {@link
       * Register#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @param password
       * @param passwordAlt
       * @since 1.13
       */
      protected Register(java.lang.String email, java.lang.String password, java.lang.String passwordAlt) {
        super(Fmthings.this, "POST", REST_PATH, null, com.google.api.services.fmthings.model.MessageBean.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
        this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
        this.passwordAlt = com.google.api.client.util.Preconditions.checkNotNull(passwordAlt, "Required parameter passwordAlt must be specified.");
      }

      @Override
      public Register setAlt(java.lang.String alt) {
        return (Register) super.setAlt(alt);
      }

      @Override
      public Register setFields(java.lang.String fields) {
        return (Register) super.setFields(fields);
      }

      @Override
      public Register setKey(java.lang.String key) {
        return (Register) super.setKey(key);
      }

      @Override
      public Register setOauthToken(java.lang.String oauthToken) {
        return (Register) super.setOauthToken(oauthToken);
      }

      @Override
      public Register setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Register) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Register setQuotaUser(java.lang.String quotaUser) {
        return (Register) super.setQuotaUser(quotaUser);
      }

      @Override
      public Register setUserIp(java.lang.String userIp) {
        return (Register) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public Register setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String password;

      /**

       */
      public java.lang.String getPassword() {
        return password;
      }

      public Register setPassword(java.lang.String password) {
        this.password = password;
        return this;
      }

      @com.google.api.client.util.Key("password_alt")
      private java.lang.String passwordAlt;

      /**

       */
      public java.lang.String getPasswordAlt() {
        return passwordAlt;
      }

      public Register setPasswordAlt(java.lang.String passwordAlt) {
        this.passwordAlt = passwordAlt;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String name;

      /**

       */
      public java.lang.String getName() {
        return name;
      }

      public Register setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String phone;

      /**

       */
      public java.lang.String getPhone() {
        return phone;
      }

      public Register setPhone(java.lang.String phone) {
        this.phone = phone;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String address;

      /**

       */
      public java.lang.String getAddress() {
        return address;
      }

      public Register setAddress(java.lang.String address) {
        this.address = address;
        return this;
      }

      @Override
      public Register set(String parameterName, Object value) {
        return (Register) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "account.update".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.fmthings.model.AppMember}
     * @return the request
     */
    public Update update(com.google.api.services.fmthings.model.AppMember content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends FmthingsRequest<com.google.api.services.fmthings.model.AppMember> {

      private static final String REST_PATH = "account/update";

      /**
       * Create a request for the method "account.update".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.fmthings.model.AppMember}
       * @since 1.13
       */
      protected Update(com.google.api.services.fmthings.model.AppMember content) {
        super(Fmthings.this, "PUT", REST_PATH, content, com.google.api.services.fmthings.model.AppMember.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Items collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Fmthings fmthings = new Fmthings(...);}
   *   {@code Fmthings.Items.List request = fmthings.items().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Items items() {
    return new Items();
  }

  /**
   * The "items" collection of methods.
   */
  public class Items {

    /**
     * Create a request for the method "items.delete".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Delete delete(java.lang.Long id) throws java.io.IOException {
      Delete result = new Delete(id);
      initialize(result);
      return result;
    }

    public class Delete extends FmthingsRequest<com.google.api.services.fmthings.model.DBItem> {

      private static final String REST_PATH = "items/delete";

      /**
       * Create a request for the method "items.delete".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Delete(java.lang.Long id) {
        super(Fmthings.this, "DELETE", REST_PATH, null, com.google.api.services.fmthings.model.DBItem.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Delete setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "items.get".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Get get(java.lang.Long id) throws java.io.IOException {
      Get result = new Get(id);
      initialize(result);
      return result;
    }

    public class Get extends FmthingsRequest<com.google.api.services.fmthings.model.DBItem> {

      private static final String REST_PATH = "items/get";

      /**
       * Create a request for the method "items.get".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Get(java.lang.Long id) {
        super(Fmthings.this, "GET", REST_PATH, null, com.google.api.services.fmthings.model.DBItem.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Get setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "items.getByUser".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link GetByUser#execute()} method to invoke the remote operation.
     *
     * @param email
     * @return the request
     */
    public GetByUser getByUser(java.lang.String email) throws java.io.IOException {
      GetByUser result = new GetByUser(email);
      initialize(result);
      return result;
    }

    public class GetByUser extends FmthingsRequest<com.google.api.services.fmthings.model.CollectionResponseDBItem> {

      private static final String REST_PATH = "items/forMember";

      /**
       * Create a request for the method "items.getByUser".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link GetByUser#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetByUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @since 1.13
       */
      protected GetByUser(java.lang.String email) {
        super(Fmthings.this, "GET", REST_PATH, null, com.google.api.services.fmthings.model.CollectionResponseDBItem.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetByUser setAlt(java.lang.String alt) {
        return (GetByUser) super.setAlt(alt);
      }

      @Override
      public GetByUser setFields(java.lang.String fields) {
        return (GetByUser) super.setFields(fields);
      }

      @Override
      public GetByUser setKey(java.lang.String key) {
        return (GetByUser) super.setKey(key);
      }

      @Override
      public GetByUser setOauthToken(java.lang.String oauthToken) {
        return (GetByUser) super.setOauthToken(oauthToken);
      }

      @Override
      public GetByUser setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetByUser) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetByUser setQuotaUser(java.lang.String quotaUser) {
        return (GetByUser) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetByUser setUserIp(java.lang.String userIp) {
        return (GetByUser) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public GetByUser setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String cursor;

      /**

       */
      public java.lang.String getCursor() {
        return cursor;
      }

      public GetByUser setCursor(java.lang.String cursor) {
        this.cursor = cursor;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String type;

      /**

       */
      public java.lang.String getType() {
        return type;
      }

      public GetByUser setType(java.lang.String type) {
        this.type = type;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer limit;

      /**

       */
      public java.lang.Integer getLimit() {
        return limit;
      }

      public GetByUser setLimit(java.lang.Integer limit) {
        this.limit = limit;
        return this;
      }

      @Override
      public GetByUser set(String parameterName, Object value) {
        return (GetByUser) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "items.getMine".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link GetMine#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public GetMine getMine() throws java.io.IOException {
      GetMine result = new GetMine();
      initialize(result);
      return result;
    }

    public class GetMine extends FmthingsRequest<com.google.api.services.fmthings.model.CollectionResponseDBItem> {

      private static final String REST_PATH = "items/mine";

      /**
       * Create a request for the method "items.getMine".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link GetMine#execute()} method to invoke the remote operation.
       * <p> {@link
       * GetMine#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetMine() {
        super(Fmthings.this, "GET", REST_PATH, null, com.google.api.services.fmthings.model.CollectionResponseDBItem.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetMine setAlt(java.lang.String alt) {
        return (GetMine) super.setAlt(alt);
      }

      @Override
      public GetMine setFields(java.lang.String fields) {
        return (GetMine) super.setFields(fields);
      }

      @Override
      public GetMine setKey(java.lang.String key) {
        return (GetMine) super.setKey(key);
      }

      @Override
      public GetMine setOauthToken(java.lang.String oauthToken) {
        return (GetMine) super.setOauthToken(oauthToken);
      }

      @Override
      public GetMine setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetMine) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetMine setQuotaUser(java.lang.String quotaUser) {
        return (GetMine) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetMine setUserIp(java.lang.String userIp) {
        return (GetMine) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String cursor;

      /**

       */
      public java.lang.String getCursor() {
        return cursor;
      }

      public GetMine setCursor(java.lang.String cursor) {
        this.cursor = cursor;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String type;

      /**

       */
      public java.lang.String getType() {
        return type;
      }

      public GetMine setType(java.lang.String type) {
        this.type = type;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer limit;

      /**

       */
      public java.lang.Integer getLimit() {
        return limit;
      }

      public GetMine setLimit(java.lang.Integer limit) {
        this.limit = limit;
        return this;
      }

      @Override
      public GetMine set(String parameterName, Object value) {
        return (GetMine) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "items.insert".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.fmthings.model.DBItem}
     * @return the request
     */
    public Insert insert(com.google.api.services.fmthings.model.DBItem content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends FmthingsRequest<com.google.api.services.fmthings.model.DBItem> {

      private static final String REST_PATH = "items/insert";

      /**
       * Create a request for the method "items.insert".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.fmthings.model.DBItem}
       * @since 1.13
       */
      protected Insert(com.google.api.services.fmthings.model.DBItem content) {
        super(Fmthings.this, "POST", REST_PATH, content, com.google.api.services.fmthings.model.DBItem.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "items.list".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends FmthingsRequest<com.google.api.services.fmthings.model.CollectionResponseDBItem> {

      private static final String REST_PATH = "items";

      /**
       * Create a request for the method "items.list".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Fmthings.this, "GET", REST_PATH, null, com.google.api.services.fmthings.model.CollectionResponseDBItem.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String cursor;

      /**

       */
      public java.lang.String getCursor() {
        return cursor;
      }

      public List setCursor(java.lang.String cursor) {
        this.cursor = cursor;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String type;

      /**

       */
      public java.lang.String getType() {
        return type;
      }

      public List setType(java.lang.String type) {
        this.type = type;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer limit;

      /**

       */
      public java.lang.Integer getLimit() {
        return limit;
      }

      public List setLimit(java.lang.Integer limit) {
        this.limit = limit;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "items.patch".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param id
     * @param content the {@link com.google.api.services.fmthings.model.DBItem}
     * @return the request
     */
    public Patch patch(java.lang.Long id, com.google.api.services.fmthings.model.DBItem content) throws java.io.IOException {
      Patch result = new Patch(id, content);
      initialize(result);
      return result;
    }

    public class Patch extends FmthingsRequest<com.google.api.services.fmthings.model.DBItem> {

      private static final String REST_PATH = "items/update";

      /**
       * Create a request for the method "items.patch".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @param content the {@link com.google.api.services.fmthings.model.DBItem}
       * @since 1.13
       */
      protected Patch(java.lang.Long id, com.google.api.services.fmthings.model.DBItem content) {
        super(Fmthings.this, "PATCH", REST_PATH, content, com.google.api.services.fmthings.model.DBItem.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Patch setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "items.search".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @param query
     * @return the request
     */
    public Search search(java.lang.String query) throws java.io.IOException {
      Search result = new Search(query);
      initialize(result);
      return result;
    }

    public class Search extends FmthingsRequest<com.google.api.services.fmthings.model.CollectionResponseDBItem> {

      private static final String REST_PATH = "search";

      /**
       * Create a request for the method "items.search".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       * <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param query
       * @since 1.13
       */
      protected Search(java.lang.String query) {
        super(Fmthings.this, "POST", REST_PATH, null, com.google.api.services.fmthings.model.CollectionResponseDBItem.class);
        this.query = com.google.api.client.util.Preconditions.checkNotNull(query, "Required parameter query must be specified.");
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUserIp(java.lang.String userIp) {
        return (Search) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String query;

      /**

       */
      public java.lang.String getQuery() {
        return query;
      }

      public Search setQuery(java.lang.String query) {
        this.query = query;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String cursor;

      /**

       */
      public java.lang.String getCursor() {
        return cursor;
      }

      public Search setCursor(java.lang.String cursor) {
        this.cursor = cursor;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer limit;

      /**

       */
      public java.lang.Integer getLimit() {
        return limit;
      }

      public Search setLimit(java.lang.Integer limit) {
        this.limit = limit;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String type;

      /**

       */
      public java.lang.String getType() {
        return type;
      }

      public Search setType(java.lang.String type) {
        this.type = type;
        return this;
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "items.update".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.fmthings.model.DBItem}
     * @return the request
     */
    public Update update(com.google.api.services.fmthings.model.DBItem content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends FmthingsRequest<com.google.api.services.fmthings.model.DBItem> {

      private static final String REST_PATH = "items/update";

      /**
       * Create a request for the method "items.update".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.fmthings.model.DBItem}
       * @since 1.13
       */
      protected Update(com.google.api.services.fmthings.model.DBItem content) {
        super(Fmthings.this, "PUT", REST_PATH, content, com.google.api.services.fmthings.model.DBItem.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Members collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Fmthings fmthings = new Fmthings(...);}
   *   {@code Fmthings.Members.List request = fmthings.members().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Members members() {
    return new Members();
  }

  /**
   * The "members" collection of methods.
   */
  public class Members {

    /**
     * Create a request for the method "members.get".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param email
     * @return the request
     */
    public Get get(java.lang.String email) throws java.io.IOException {
      Get result = new Get(email);
      initialize(result);
      return result;
    }

    public class Get extends FmthingsRequest<com.google.api.services.fmthings.model.AppMember> {

      private static final String REST_PATH = "members/get";

      /**
       * Create a request for the method "members.get".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @since 1.13
       */
      protected Get(java.lang.String email) {
        super(Fmthings.this, "GET", REST_PATH, null, com.google.api.services.fmthings.model.AppMember.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public Get setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "members.list".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends FmthingsRequest<com.google.api.services.fmthings.model.CollectionResponseAppMember> {

      private static final String REST_PATH = "members";

      /**
       * Create a request for the method "members.list".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Fmthings.this, "GET", REST_PATH, null, com.google.api.services.fmthings.model.CollectionResponseAppMember.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String cursor;

      /**

       */
      public java.lang.String getCursor() {
        return cursor;
      }

      public List setCursor(java.lang.String cursor) {
        this.cursor = cursor;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer limit;

      /**

       */
      public java.lang.Integer getLimit() {
        return limit;
      }

      public List setLimit(java.lang.Integer limit) {
        this.limit = limit;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "members.patch".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param email
     * @param content the {@link com.google.api.services.fmthings.model.AppMember}
     * @return the request
     */
    public Patch patch(java.lang.String email, com.google.api.services.fmthings.model.AppMember content) throws java.io.IOException {
      Patch result = new Patch(email, content);
      initialize(result);
      return result;
    }

    public class Patch extends FmthingsRequest<com.google.api.services.fmthings.model.AppMember> {

      private static final String REST_PATH = "members/update";

      /**
       * Create a request for the method "members.patch".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @param content the {@link com.google.api.services.fmthings.model.AppMember}
       * @since 1.13
       */
      protected Patch(java.lang.String email, com.google.api.services.fmthings.model.AppMember content) {
        super(Fmthings.this, "PATCH", REST_PATH, content, com.google.api.services.fmthings.model.AppMember.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public Patch setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "members.search".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @param email
     * @return the request
     */
    public Search search(java.lang.String email) throws java.io.IOException {
      Search result = new Search(email);
      initialize(result);
      return result;
    }

    public class Search extends FmthingsRequest<com.google.api.services.fmthings.model.CollectionResponseDBMember> {

      private static final String REST_PATH = "members/search";

      /**
       * Create a request for the method "members.search".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       * <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @since 1.13
       */
      protected Search(java.lang.String email) {
        super(Fmthings.this, "POST", REST_PATH, null, com.google.api.services.fmthings.model.CollectionResponseDBMember.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUserIp(java.lang.String userIp) {
        return (Search) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public Search setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String cursor;

      /**

       */
      public java.lang.String getCursor() {
        return cursor;
      }

      public Search setCursor(java.lang.String cursor) {
        this.cursor = cursor;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer limit;

      /**

       */
      public java.lang.Integer getLimit() {
        return limit;
      }

      public Search setLimit(java.lang.Integer limit) {
        this.limit = limit;
        return this;
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "members.update".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.fmthings.model.AppMember}
     * @return the request
     */
    public Update update(com.google.api.services.fmthings.model.AppMember content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends FmthingsRequest<com.google.api.services.fmthings.model.AppMember> {

      private static final String REST_PATH = "members/update";

      /**
       * Create a request for the method "members.update".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.fmthings.model.AppMember}
       * @since 1.13
       */
      protected Update(com.google.api.services.fmthings.model.AppMember content) {
        super(Fmthings.this, "PUT", REST_PATH, content, com.google.api.services.fmthings.model.AppMember.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Test collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Fmthings fmthings = new Fmthings(...);}
   *   {@code Fmthings.Test.List request = fmthings.test().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Test test() {
    return new Test();
  }

  /**
   * The "test" collection of methods.
   */
  public class Test {

    /**
     * Create a request for the method "test.authenticated".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Authenticated#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Authenticated authenticated() throws java.io.IOException {
      Authenticated result = new Authenticated();
      initialize(result);
      return result;
    }

    public class Authenticated extends FmthingsRequest<com.google.api.services.fmthings.model.MessageBean> {

      private static final String REST_PATH = "test/auth";

      /**
       * Create a request for the method "test.authenticated".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Authenticated#execute()} method to invoke the remote
       * operation. <p> {@link Authenticated#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @since 1.13
       */
      protected Authenticated() {
        super(Fmthings.this, "GET", REST_PATH, null, com.google.api.services.fmthings.model.MessageBean.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Authenticated setAlt(java.lang.String alt) {
        return (Authenticated) super.setAlt(alt);
      }

      @Override
      public Authenticated setFields(java.lang.String fields) {
        return (Authenticated) super.setFields(fields);
      }

      @Override
      public Authenticated setKey(java.lang.String key) {
        return (Authenticated) super.setKey(key);
      }

      @Override
      public Authenticated setOauthToken(java.lang.String oauthToken) {
        return (Authenticated) super.setOauthToken(oauthToken);
      }

      @Override
      public Authenticated setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Authenticated) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Authenticated setQuotaUser(java.lang.String quotaUser) {
        return (Authenticated) super.setQuotaUser(quotaUser);
      }

      @Override
      public Authenticated setUserIp(java.lang.String userIp) {
        return (Authenticated) super.setUserIp(userIp);
      }

      @Override
      public Authenticated set(String parameterName, Object value) {
        return (Authenticated) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "test.unauthenticated".
     *
     * This request holds the parameters needed by the the fmthings server.  After setting any optional
     * parameters, call the {@link Unauthenticated#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Unauthenticated unauthenticated() throws java.io.IOException {
      Unauthenticated result = new Unauthenticated();
      initialize(result);
      return result;
    }

    public class Unauthenticated extends FmthingsRequest<com.google.api.services.fmthings.model.MessageBean> {

      private static final String REST_PATH = "test";

      /**
       * Create a request for the method "test.unauthenticated".
       *
       * This request holds the parameters needed by the the fmthings server.  After setting any
       * optional parameters, call the {@link Unauthenticated#execute()} method to invoke the remote
       * operation. <p> {@link Unauthenticated#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @since 1.13
       */
      protected Unauthenticated() {
        super(Fmthings.this, "GET", REST_PATH, null, com.google.api.services.fmthings.model.MessageBean.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Unauthenticated setAlt(java.lang.String alt) {
        return (Unauthenticated) super.setAlt(alt);
      }

      @Override
      public Unauthenticated setFields(java.lang.String fields) {
        return (Unauthenticated) super.setFields(fields);
      }

      @Override
      public Unauthenticated setKey(java.lang.String key) {
        return (Unauthenticated) super.setKey(key);
      }

      @Override
      public Unauthenticated setOauthToken(java.lang.String oauthToken) {
        return (Unauthenticated) super.setOauthToken(oauthToken);
      }

      @Override
      public Unauthenticated setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Unauthenticated) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Unauthenticated setQuotaUser(java.lang.String quotaUser) {
        return (Unauthenticated) super.setQuotaUser(quotaUser);
      }

      @Override
      public Unauthenticated setUserIp(java.lang.String userIp) {
        return (Unauthenticated) super.setUserIp(userIp);
      }

      @Override
      public Unauthenticated set(String parameterName, Object value) {
        return (Unauthenticated) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Fmthings}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Fmthings}. */
    @Override
    public Fmthings build() {
      return new Fmthings(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link FmthingsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setFmthingsRequestInitializer(
        FmthingsRequestInitializer fmthingsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(fmthingsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
